version: '2'
services:
  zookeeper:
    restart: always
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    restart: always
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 39092:39092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INT://host.docker.internal:39092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_INT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_NUM_PARTITIONS: 1

  kowl:
    image: quay.io/cloudhut/kowl:master
    ports:
      - 8080:8080
    depends_on: 
      - kafka
    environment: 
      KAFKA_BROKERS: kafka:9092
    restart: always
  kafka_admin:
    image: hlebalbau/kafka-manager:stable
    command:
      - "-Dhttp.port=9005"
    ports:
      - 9002:9005
    depends_on:
      - kafka
      - zookeeper
    environment:
      ZK_HOSTS: zookeeper:2181

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  rediscommander:
    image: rediscommander/redis-commander:latest
    ports:
      - 8081:8081
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.19.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 1
      KSQL_KSQL_SINK_REPLICAS: 1
      

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.19.0
    container_name: ksqldb-cli
    depends_on:
      - kafka
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

  token-signature-identifier:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    image: data-pipelines:latest
    command: node dist/lib/kafka-signature-identifier.js
    depends_on:
      - kafka
    environment:
      SOLANA_URL: "http://host.docker.internal:8899"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_TOPIC: json.solana.signatures.token
      ADDRESS: TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA

  atoken-signature-identifier:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    image: data-pipelines:latest
    command: node dist/lib/kafka-signature-identifier.js
    depends_on:
      - kafka
    environment:
      SOLANA_URL: "http://host.docker.internal:8899"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_TOPIC: json.solana.signatures.atoken
      ADDRESS: ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL

  name-signature-identifier:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    image: data-pipelines:latest
    command: node dist/lib/kafka-signature-identifier.js
    depends_on:
      - kafka
    environment:
      SOLANA_URL: "http://host.docker.internal:8899"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_TOPIC: json.solana.signatures.name
      ADDRESS: namesLPneVptA9Z5rqUDD9tMTWEJwofgaYwp8cawRkX

  signature-collector:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    image: data-pipelines:latest
    command: node dist/lib/kafka-signature-collector.js
    depends_on:
      - kafka
      - name-signature-identifier
      - atoken-signature-identifier
      - token-signature-identifier

    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_INPUT_TOPIC: json.solana.signatures..*
      KAFKA_TOPIC: json.solana.signatures
      KAFKA_GROUP_ID: kafka-signature-collector
      KAFKA_OFFSET_RESET: earliest

  signature-processor:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    image: data-pipelines:latest
    command: node dist/lib/kafka-signature-processor.js
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_INPUT_TOPIC: json.solana.signatures
      KAFKA_TOPIC: json.solana.transactions
      SOLANA_URL: "http://host.docker.internal:8899"
      KAFKA_GROUP_ID: kafka-signature-processor-1
      KAFKA_OFFSET_RESET: earliest
    
  event-transformer:
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always
    image: data-pipelines:latest
    container_name: event-transformer
    depends_on:
      - kafka
    command: node dist/lib/event-transformer
    environment:
      SOLANA_URL: "http://host.docker.internal:8899"
      ANCHOR_IDLS: "TBondmkCYxaPCKG4CHYfVTcwQ8on31xnJrPzk8F8WsS,TCo1sfSr2nCudbeJPykbif64rG9K1JNMGzrtzvPmp3y"
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_INPUT_TOPIC: "json.solana.transactions"
      KAFKA_OUTPUT_TOPIC: "json.solana.events"
      KAFKA_OFFSET_RESET: "earliest"
      KAFKA_GROUP_ID: "solana-event-transformer"
